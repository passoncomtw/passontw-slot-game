# 構建階段
FROM golang:1.22-alpine AS builder

# 設置必要的 Alpine 包
RUN apk add --no-cache git make gcc libc-dev

# 設置工作目錄
WORKDIR /app

# 複製 Go 模組文件
COPY game-api/go.mod game-api/go.sum ./

# 下載依賴
RUN go mod download

# 複製源代碼
COPY game-api/ ./

# 構建參數
ARG APP_ENV=development
ENV APP_ENV=${APP_ENV}

# 構建應用程序
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-s -w -X main.version=$(cat VERSION 2>/dev/null || echo 'dev') -X main.buildTime=$(date -u +'%Y-%m-%dT%H:%M:%SZ') -X main.gitCommit=$(git rev-parse --short HEAD 2>/dev/null || echo 'unknown') -X main.environment=${APP_ENV}" -o gameapi ./cmd/api

# 運行階段
FROM alpine:3.19

LABEL maintainer="Slot Game Team"
LABEL org.opencontainers.image.source="https://github.com/passonTomas/slot-game-service"
LABEL org.opencontainers.image.description="遊戲 API 服務"

# 安裝 CA 證書和基本工具
RUN apk add --no-cache ca-certificates tzdata curl

# 設置時區
ENV TZ=Asia/Taipei

# 創建非 root 用戶
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# 創建目錄結構
RUN mkdir -p /app/logs && chown -R appuser:appgroup /app/logs

# 設置工作目錄
WORKDIR /app

# 從構建階段複製二進制文件
COPY --from=builder /app/gameapi /app/

# 複製健康檢查腳本
COPY game-api/scripts/healthcheck.sh /app/healthcheck.sh
RUN chmod +x /app/healthcheck.sh

# 暴露端口
EXPOSE 8080

# 設置健康檢查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 CMD ["/app/healthcheck.sh"]

# 使用非 root 用戶
USER appuser

# 運行應用程序
CMD ["/app/gameapi"] 